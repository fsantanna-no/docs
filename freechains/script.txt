=== 1

O Freechains é um sistema peer-to-peer pra disseminação de conteúdo.

==== 2

Conteúdo aqui se refere a todo tipo de informação e interação no nosso
dia-a-dia na internet.
Desde trocas de e-mails e mensagens instantâneas, consumo de notícias,
interações em mídias sociais, e até mesmo backup de documentos ou uso de
aplicativos de celular, por exemplo, pra pedir comida e taxi.

---

Esse conteúdo, ele tem que ser disseminado entre as partes interessadas de
alguma forma.
Então, por exemplo, um site de notícias vai entregar o seu conteúdo a diversos
consumidores, seguindo um padrão assimétrico "1 para N".
Se o site oferecer a opção de comentários e feedback, então a disseminação vai
ocorrer no sentido contrário "N para 1".

Já uma troca de e-mails segue o padrão "1 para 1" de disseminação.
E um fórum público de discussão com diversas pessoas se comunicando entre si,
vai seguir um padrão "N para N" de disseminação.
Nesses últimos dois casos a relação entre as partes é simétrica.

Também é possível haver apenas um produtor e consumidor para a mesma
informação, como no caso do armazenamento de arquivos para backup ou
visualização remota.

---

O Freechains se propõe a oferecer esses padrões de disseminação de conteúdo
em uma arquitetura peer-to-peer, ou seja
  - sem a necessidade de intermediários ou um servidor central pré-determinado
  - sem um sistema centralizado de autoridade que controle o acesso ao conteúdo
  - e, principalmente, sem a necessidade de confiança entre as partes

=== 3

A internet hoje é controlada por pouquíssimas empresas:
- E elas controlam as nossas informações públicas
- Elas coletam informações nossas privadas, mesmo que a gente não queira.
- Elas também decidem grande parte do que a gente vai consumir de informação.
- Em alguns casos, os serviços precisam de conectividade permanente, mesmo pra
  informações que a gente já consumiu alguma vez.
- Por fim, os protocolos e formatos dos dados muitas vezes não são compatíveis
  com padrões abertos, o que dificulta a portabilidade dos dados e a integração
  com serviços de terceiros.

=== 4

Praticamente tudo o que a gente faz hoje na internet, a gente usa seviços
dessas empresas, ou em alguns casos, empresas igualmente gigantes.
E essas empresas tem acesso praticamente irrestrito aos nossos dados:
- As nossas trocas de mensagens.
- Os nossos hábitos e preferências.
- As nossas informações pessoais, muitas vezes confidenciais.
- As nossas interações públicas com amigos e colegas de trabalho.
- Os nossos arquivos e documentos
- Os nossos gastos
- O que a gente vê e escuta
- E até mesmo o que a gente fala
Todos esses nossos dados estão diariamente e ininterruptamente sendo
transmitidos e armazenados na infra-estrutura em nuvem dessas empresas.

=== 5

Aqui tem alguns exemplos da nossa realidade hoje:
- A gente tá numa conversa despretenciosa
    - com o nosso celular por perto
    - e a gente começa receber propagandas relacionadas
    - ou seja, nossos dados privados estão sendo coletados
    - e nosso consumo de informação sendo direcionado
- Aqui eu trabalho em um documento online,
    - mas se a minha conexão cai, a eu perco o acesso a ele
- Aqui estamos fisicamente lado a lado, mas não podemos trocar uma foto
  diretamente
    - a não ser que ela seja transferida pela internet

=== 6

- Eu recebo um link de interesse de um terceiro
    - mas a empresa que intermedia o acesso de um conteúdo que ela não criou
      exige que eu me cadastre a ela
    - ou me encomoda cobrindo 1/3 da minha tela
- Partindo de uma predileção ou padrão meu, eu sou bombardeado com conteúdos
  similares de modo a segurar a minha atenção no serviço.
- Eu me comunico com diversas pessoas, muitas vezes por meios diferentes, mas
  não há como integrar esses meios, mesmo quando eu me comunico com a mesma
  pessoa.
- O mesmo vale para interações públicas em redes sociais.

=== 7

- A internet hoje é extremamente centralizada, muito diferente de como foi
  inicialmente idealizada e de certa forma praticada até 15-20 anos atrás.
- Hoje há uma centralização de dados, infra-estrutura e de poder na mão de
  poucas empresas.

=== 8

Se a gente quer decentralizar esses serviços de disseminação, é interessante
a gente primeiro entender melhor os padrões de comunicações vigentes.
Assim a gente vai poder pegar um serviço qualquer e verificar se ele vai se
enquadrar em um padrão já conhecido e com uma solução distribuída também
conhecida.

Aqui eu classifico os padrões de disseminação em três grupos.
O primeiro se refere a identidade pública de um participante, geralmente um
difusor de conteúdo.
Aqui se enquadram sites de notícias, serviços de streaming, websites e
perfis públicos em redes sociais.
O segundo grupo compreende as comunicações privadas em pares, grupos ou
individuais.
O terceiro grupo se refere aos fórums públicos, tais como sites de perguntas e
respostas, chats, e comércio público.
Esse grupo é o mais complicado de implementar de forma prática, já que os pares
não se conhecem e muitas vezes há usuários maliciosos no meio.

Pegando o primeiro grupo, uma identidade pública quer difundir o seu conteúdo
de modo a atingir um público de interesse.
Esse conteúdo pode ser entendido como uma sequência de mensagens ao longo do
tempo.
Os assinantes também podem prover um feedback ao difusor, opcionalmente.

=== 9

É possível então decentralizar esses padrões de dissmeminação de conteúdo?
Existem diversas questões em sistemas em rede que precisam ser endereçadas,
ainda mais em sistemas distribuídos.

- Os pares conseguem trocar mensagens?
Disponibilidade tipicamente não é um problema em sistemas peer-to-peer,
principalmente em comparação com sistemas centralizados.

- Integridade é a garantia de que a mensagem não vai ser alterada ou que,
pelo menos, uma alteração vai ser detectada pelo destinatário.
- Com autenticidade, o remetente vai poder ser verificado e, além disso, ele
não vai poder negar que enviou a mensagem.
- Confidencialidade é a garantia que o conteúdo não vai ser lido por terceiros,
somente pelo destinatário.
Esse tripé da segurança de informação também é um problema que já foi resolvido
para o caso geral de um sistema distribuído sem relação de confiança entre os
pares.

- As maiores dificuldades estão nos últimos três itens, principalmente para o
padrão N para N de fórums públicos, onde não há um mediador de confiança entre
todos os pares.
AVANÇA
- Como garantir que os todos os pares recebam todas as mensagens e em uma
ordem consistente?
- Como garantir que todos os participantes consigam se comunicar uns com os
outros?
- E como garantir que as mensagens mais importantes se destaquem, ao mesmo
tempo em que mensagens em excesso, SPAM, fake news e conteúdo ilegal não se
sobreponha?

- Para essas questões, nós propomos com o Freechains um sistema de reputação
de mensagens e autores que funciona em conjunto com o que chamamos de
"consenso social".
O sistema de reputação é aplicado de forma autônoma pelo protocolo,
já o consenso social exige intervenção humana para a remoção de conteúdo.

=== 10

Vamos agora olhar mais de perto a comunicação N para N de fórums públicos.

=== 11

A comunicação varia com o tempo e também com a participação de usuários que
postam novos conteúdos.
Aqui, um usuário posta um pergunta e dois outros usuários respondem.
Depois, há uma nova pergunta e outra pergunta, essa que é respondida, que por
sua vez recebe uma reposta em cima.
E assim sucessivamente...

Num sistema centralizado, por exemplo o StackOverflow, essas postagens podem
ser projetadas no tempo e ordenadas por ordem de chegada.
É fácil obter uma ordem total das mensagens em um sistema centralizado.

=== 12-13

Já em um sistema decentralizado, as questões de latência e conectividade podem
gerar ordens de recebimento diferentes em cada par da rede.
Assim, como fazer pra sincronizar os pares ao longo do tempo?
Como saber o que cada um possui e não possui?
E como a gente pode garantir que essas ordens de recebimento não inflijam
nenhuma regra de consistência?
Por exemplo, como garantir que uma resposta não chegue antes da pergunta
correspondente?

=== 14

O Bitcoin também é uma rede de disseminação de conteúdo "N para N" que resolveu
esse problema de consenso distribuído utilizando o conceito de
"Prova de Trabalho".
Como que funciona?

Aqui a gente tem três pares, cada um com uma ordem de recebimento diferente.
A ideia é que a ordem que tiver mais trabalho associado se torne o consenso da
rede.

Os pares da rede separam as postagens recebidas em blocos que são as unidades
de trabalho.
Com um bloco em mãos, o nó usa uma fórmula do protocolo pré-determinada e
começa a combinar o bloco com números aleatórios de entrada e gera números de
saída.
A ideia é que esse novo número de saída tenha uma quantidade mínima de zeros à
esquerda que seja aceito pela rede, por exemplo 4 zeros à esquerda.
As soluções aceitas pela rede são recompensadas, oferecendo o incentivo
necessário para a rede peer-to-peer operar.

Aqui, o primeiro nó conseguiu encontrar os quatro zeros e o terceiro nó
imediatamente aceita a solução.
E ambos começam a trabalhar na próxima solução.
O segundo nó pode ou aceitar o consenso também ou continuar trabalhando na sua
solução atual e na próxima para tentar receber as recompensa.
Só que com o risco de ficar cada vez mais pra trás.
Se ele aceitar, ele tem mais chances de resolver o próximo bloco e assim em
diante

























